import unicodecsv as csv #import unicodecsv module as name csv
import matplotlib.pyplot as plt #import matplotlib.pyplot module as name plt

def getBarChartData(): #define a function called getBarChartData
    f_artists = open('artists.csv') #Open artists.csv and name it f_artists
    f_albums = open('albums.csv') #Open albums.csv and name it f_albums

    artists_rows = csv.reader(f_artists) #Return a reader object artists_rows which will iterate over lines in artists.csv
    albums_rows = csv.reader(f_albums) #Return a reader object albumss_rows which will iterate over lines in albums.csv

    artists_header = artists_rows.next() # get the first line of artists_rows and name it as artists_header
    albums_header = albums_rows.next() # get the first line of albums_rows and name it as albums_header
    #print (albus_header)
    artist_names = [] #create an empty list named artist_names
    
    decades = range(1900,2020, 10) #create a list named dacades which includes numbers from 1900 to 2020 with a step of 10
    decade_dict = {} #create a dictionary called decade_dict
    for decade in decades: # for every number in the list decades
        decade_dict[decade] = 0 # gives decade_dict a key which equals to that number and a corresponding value 0 to that key 
    
    for artist_row in artists_rows: #for every element in artist_rows
        if not artist_row: #if there is any blank row, skip it
            continue
        #print artist_row    
        artist_id,name,followers, popularity = artist_row  #give values to artist_id,name,followers, popularity from the content of that row
        artist_names.append(name) #append the value of list to the artist_names list

    for album_row  in albums_rows: # for every element in albums_rows
        if not album_row: #if the row is blank, skip it
            continue
        artist_id, album_id, album_name, year, popularity = album_row #set the values of the variables artist_id, album_id, album_name, year, popularity to be the corresponding values in the row 
        for decade in decades: # for each element in list decades
            if (int(year) >= int(decade)) and (int(year) < (int(decade) + 10)): #if the year of that album falls into the interval (decade,decade+10)
                decade_dict[decade] += 1 # add 1 to the value with the key [decade] in the dictionary
                break #break out of the loop

    x_values = decades #define x_values to be the list decades
    y_values = [decade_dict[d] for d in decades] #define t_values to be a list of values of decade_dict corresponding to every key in list decades
    return x_values, y_values, artist_names # let the function return to the value x_values,y_values and artist_names


def plotBarChart(): #define a function called plot Barchart
    x_vals, y_vals, artist_names = getBarChartData() #set x_vals, y_vals and artist_names as the three outputs generated by getBarChartData function
    
    fig , ax = plt.subplots(1,1) #create a figure and one subplot with 1 row and 1 column
    ax.bar(x_vals, y_vals, width=10)  # set the graph to be a barchar with bar width of 10 
    ax.set_xlabel('decades') #name the x label decades
    ax.set_ylabel('number of albums') # name the y label number of albums
    ax.set_title('Totals for ' + ', '.join(artist_names)) #name the title of the graph the totals for artists
    plt.show() # plot the graph
    



